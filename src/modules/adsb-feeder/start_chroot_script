#!/usr/bin/env bash
# overall distro module for ADSB.im feeder image
# Written by Dirk Hohndel <dirk@hohndel.org>
# GPL V3
########


# Source error handling, leave this in place
set -x
set -e

source /common.sh
install_cleanup_trap

unpack /filesystem/root /

# speed up apt-get operations by not rebuilding the man-db cache:
rm -f /var/lib/man-db/auto-update

# free up space
apt-get autoremove -y gcc-12 dpkg-dev gdb build-essential mkvtoolnix iso-codes shared-mime-info rpicam-apps-lite\* || true

echo "building on $(hostname) - available disk space inside the image:"
df -h
mount
echo "127.0.1.1 $(hostname)" 2>/dev/null >> /etc/hosts

# brute force set up an authorized_keys file for root
mkdir -p ~root/.ssh
echo "$SSH_PUB_KEY" >> ~root/.ssh/authorized_keys
echo "$SSH_PUB_KEY" > ~root/.ssh/adsb.im.installkey
touch /opt/adsb/adsb.im.passwd.and.keys

# zerotier and tailscale repos

DEBIAN_DISTRO=$(head -1 /etc/apt/sources.list | cut -d\  -f 3)
echo "deb http://download.zerotier.com/debian/${DEBIAN_DISTRO} ${DEBIAN_DISTRO} main" > /etc/apt/sources.list.d/zerotier.list
curl -fsSL "https://pkgs.tailscale.com/stable/debian/${DEBIAN_DISTRO}.noarmor.gpg" | sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
curl -fsSL "https://pkgs.tailscale.com/stable/debian/${DEBIAN_DISTRO}.tailscale-keyring.list" | sudo tee /etc/apt/sources.list.d/tailscale.list

# setup Python/Flask
apt-get update --allow-releaseinfo-change

apt-get install -y --no-install-recommends python3 python3-flask python3-requests

# install chrony for better time synchronization compared to systemd-timesyncd
apt-get install -y --no-install-recommends chrony
# instead of only allowing stepping the clock for 3 updates after startup,
# always step the clock if it's off by more than 0.5 seconds
sed -i -e 's/^makestep.*/makestep 0.5 -1/' /etc/chrony/chrony.conf

if [ "$FEEDER_IMAGE_NAME" != "" ] ; then
	echo "$FEEDER_IMAGE_NAME" > /opt/adsb/feeder-image.name
else
	echo "custom built feeder image" > /opt/adsb/feeder-image.name
fi
echo "Using feeder image name $(cat /opt/adsb/feeder-image.name)"

# setup initial .env with container versions
mkdir -p /etc/adsb
ENV_FILE=/etc/adsb/.env
cp /opt/adsb/docker.image.versions "$ENV_FILE"
echo "_ADSBIM_BASE_VERSION=$(cat /opt/adsb/adsb.im.version)" >> "$ENV_FILE"
echo "_ADSBIM_CONTAINER_VERSION=$(cat /opt/adsb/adsb.im.version)" >> "$ENV_FILE"

rm -f /boot/ADSB-README.txt

# Install dependencies
apt-get install -y \
    gnupg hostapd kea avahi-utils \
    git rtl-sdr \
    apt-transport-https ca-certificates curl gnupg2 \
    slirp4netns uidmap jq zstd netcat-openbsd

systemctl mask hostapd.service
systemctl mask isc-kea-dhcp4-server.service

# install zerotier and tailscale, first get their repo
# don't enable

apt-get install -y zerotier-one tailscale
systemctl disable tailscaled
systemctl disable zerotier-one
systemctl mask tailscaled
systemctl mask zerotier-one

# avoid unnecessary diskwrites by zerotier
ln -sf /dev/null /var/lib/zerotier-one/metrics.prom

# disable swapfile, we have swap on zram
systemctl disable dphys-swapfile || true

# Disable telemetry for tailscale
# but only if it's not already there
if ! grep -q -- "^FLAGS=\"--no-logs-no-support" /etc/default/tailscaled ; then
	sed -i 's/FLAGS=\"/FLAGS=\"--no-logs-no-support /' /etc/default/tailscaled
fi

# If we are armbian, we do something with networking
if [ "$BASE_DISTRO" = "armbian" ] ; then
	apt-get install -y network-manager net-tools

	echo "127.0.0.1 porttracker-feeder.local" >> /etc/hosts

	# ensure that we get predictable interface names
	echo "extraargs=net.ifnames=0" >> /boot/armbianEnv.txt
	if [[ -f /usr/lib/systemd/system/armbian-firstrun-config.service ]] ; then
		sed -i 's/Wants=network-online.target/Wants=network-pre.target/;s/After=network.target network-online.target/Before=wpa_supplicant.service network.target network-online.target/' /usr/lib/systemd/system/armbian-firstrun-config.service
		systemctl list-unit-files armbian-firstrun-config &>/dev/null && systemctl enable armbian-firstrun-config
	fi
fi

# Enable services at boot
systemctl enable adsb-setup.service
systemctl enable adsb-docker.service
systemctl enable adsb-bootstrap.service
systemctl enable adsb-zram.service
systemctl enable adsb-update.timer
systemctl enable adsb-netdog.service

# Disable some things we don't need and that only eat memory (assuming they exist)
systemctl disable bluetooth.service || true
systemctl disable ModemManager.service || true
